package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "risk_module")
public class Employee implements java.io.Serializable {

	private Integer employeeId;
	private Employee employee;
	private Office office;
	private Address addressByPermanentAddressId;
	private Address addressByCurrentAddressId;
	private String employeeRole;
	private String firstName;
	private String lastName;
	private String emailAddress;
	private String externalId;
	private Boolean active;
	private String mobileNumber;
	private String governmentId;
	private String gender;
	private Date dateOfBirth;
	private String bloodGroup;
	private String contactName;
	private String contactPhNo;
	private String educationLevel;
	private String university;
	private String createdBy;
	private String updatedBy;
	private Date createdDate;
	private Date updatedDate;
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<Audit> audits = new HashSet<Audit>(0);
	private Set<Audit> audits_1 = new HashSet<Audit>(0);
	private Set<Customer> customers = new HashSet<Customer>(0);

	public Employee() {
	}

	public Employee(Office office) {
		this.office = office;
	}

	public Employee(Employee employee, Office office,
			Address addressByPermanentAddressId,
			Address addressByCurrentAddressId, String employeeRole,
			String firstName, String lastName, String emailAddress,
			String externalId, Boolean active, String mobileNumber,
			String governmentId, String gender, Date dateOfBirth,
			String bloodGroup, String contactName, String contactPhNo,
			String educationLevel, String university, String createdBy,
			String updatedBy, Date createdDate, Date updatedDate,
			Set<Employee> employees, Set<Audit> audits, Set<Audit> audits_1,
			Set<Customer> customers) {
		this.employee = employee;
		this.office = office;
		this.addressByPermanentAddressId = addressByPermanentAddressId;
		this.addressByCurrentAddressId = addressByCurrentAddressId;
		this.employeeRole = employeeRole;
		this.firstName = firstName;
		this.lastName = lastName;
		this.emailAddress = emailAddress;
		this.externalId = externalId;
		this.active = active;
		this.mobileNumber = mobileNumber;
		this.governmentId = governmentId;
		this.gender = gender;
		this.dateOfBirth = dateOfBirth;
		this.bloodGroup = bloodGroup;
		this.contactName = contactName;
		this.contactPhNo = contactPhNo;
		this.educationLevel = educationLevel;
		this.university = university;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.employees = employees;
		this.audits = audits;
		this.audits_1 = audits_1;
		this.customers = customers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "employee_id", unique = true, nullable = false)
	public Integer getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(Integer employeeId) {
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "supervisor_id")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "office_id", nullable = false)
	public Office getOffice() {
		return this.office;
	}

	public void setOffice(Office office) {
		this.office = office;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "permanent_address_id")
	public Address getAddressByPermanentAddressId() {
		return this.addressByPermanentAddressId;
	}

	public void setAddressByPermanentAddressId(
			Address addressByPermanentAddressId) {
		this.addressByPermanentAddressId = addressByPermanentAddressId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "current_address_id")
	public Address getAddressByCurrentAddressId() {
		return this.addressByCurrentAddressId;
	}

	public void setAddressByCurrentAddressId(Address addressByCurrentAddressId) {
		this.addressByCurrentAddressId = addressByCurrentAddressId;
	}

	@Column(name = "employee_role", length = 45)
	public String getEmployeeRole() {
		return this.employeeRole;
	}

	public void setEmployeeRole(String employeeRole) {
		this.employeeRole = employeeRole;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email_address", length = 100)
	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Column(name = "external_id", length = 45)
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "mobile_number", length = 45)
	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	@Column(name = "government_id", length = 45)
	public String getGovernmentId() {
		return this.governmentId;
	}

	public void setGovernmentId(String governmentId) {
		this.governmentId = governmentId;
	}

	@Column(name = "gender", length = 6)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_birth", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "blood_group", length = 45)
	public String getBloodGroup() {
		return this.bloodGroup;
	}

	public void setBloodGroup(String bloodGroup) {
		this.bloodGroup = bloodGroup;
	}

	@Column(name = "contact_name", length = 45)
	public String getContactName() {
		return this.contactName;
	}

	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	@Column(name = "contact_ph_no", length = 45)
	public String getContactPhNo() {
		return this.contactPhNo;
	}

	public void setContactPhNo(String contactPhNo) {
		this.contactPhNo = contactPhNo;
	}

	@Column(name = "education_level", length = 45)
	public String getEducationLevel() {
		return this.educationLevel;
	}

	public void setEducationLevel(String educationLevel) {
		this.educationLevel = educationLevel;
	}

	@Column(name = "university", length = 45)
	public String getUniversity() {
		return this.university;
	}

	public void setUniversity(String university) {
		this.university = university;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "employee_has_audit", catalog = "risk_module", joinColumns = { @JoinColumn(name = "employee_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "audit_id", nullable = false, updatable = false) })
	public Set<Audit> getAudits() {
		return this.audits;
	}

	public void setAudits(Set<Audit> audits) {
		this.audits = audits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Audit> getAudits_1() {
		return this.audits_1;
	}

	public void setAudits_1(Set<Audit> audits_1) {
		this.audits_1 = audits_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

}
