package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "risk_module")
public class Customer implements java.io.Serializable {

	private Integer customerId;
	private CustomerType customerType;
	private Office office;
	private Address address;
	private Customer customer;
	private Employee employee;
	private String meetingDay;
	private String externalId;
	private String displayName;
	private String firstName;
	private String lastName;
	private String mobileNumber;
	private String gender;
	private String riskRating;
	private String bmRating;
	private String bmProblemDescription;
	private String bmActionTaken;
	private boolean active;
	private Boolean employed;
	private String createdBy;
	private String updatedBy;
	private Date createdDate;
	private Date updatedDate;
	private Boolean pendingUpdate;
	private String pendingUpdateNote;
	private Integer numFamilyMembers;
	private Integer numMinDependents;
	private Integer numSeniorDependents;
	private Integer numUnwellMembers;
	private String unwellMemberHealthDescription;
	private Set<Audit> audits = new HashSet<Audit>(0);
	private Set<RiskRatingHistory> riskRatingHistories = new HashSet<RiskRatingHistory>(
			0);
	private Set<Meeting> meetings = new HashSet<Meeting>(0);
	private Set<ExternalLoan> externalLoans = new HashSet<ExternalLoan>(0);
	private Set<CustomerFamilyMember> customerFamilyMembers = new HashSet<CustomerFamilyMember>(
			0);
	private Set<Customer> customers = new HashSet<Customer>(0);
	private Set<Occupation> occupations = new HashSet<Occupation>(0);
	private Set<Asset> assets = new HashSet<Asset>(0);
	private Set<LoanAccount> loanAccounts = new HashSet<LoanAccount>(0);
	private Set<CustomerFamilyOccupation> customerFamilyOccupations = new HashSet<CustomerFamilyOccupation>(
			0);

	public Customer() {
	}

	public Customer(CustomerType customerType, Office office,
			Employee employee, boolean active) {
		this.customerType = customerType;
		this.office = office;
		this.employee = employee;
		this.active = active;
	}

	public Customer(CustomerType customerType, Office office, Address address,
			Customer customer, Employee employee, String meetingDay,
			String externalId, String displayName, String firstName,
			String lastName, String mobileNumber, String gender,
			String riskRating, String bmRating, String bmProblemDescription, 
			String bmActionTaken, boolean active,
			Boolean employed, String createdBy, String updatedBy,
			Date createdDate, Date updatedDate, Boolean pendingUpdate,
			String pendingUpdateNote, Integer numFamilyMembers,
			Integer numMinDependents, Integer numSeniorDependents,
			Integer numUnwellMembers, String unwellMemberHealthDescription,
			Set<Audit> audits, Set<RiskRatingHistory> riskRatingHistories,
			Set<Meeting> meetings, Set<ExternalLoan> externalLoans,
			Set<CustomerFamilyMember> customerFamilyMembers,
			Set<Customer> customers, Set<Occupation> occupations,
			Set<Asset> assets, Set<LoanAccount> loanAccounts,
			Set<CustomerFamilyOccupation> customerFamilyOccupations) {
		this.customerType = customerType;
		this.office = office;
		this.address = address;
		this.customer = customer;
		this.employee = employee;
		this.meetingDay = meetingDay;
		this.externalId = externalId;
		this.displayName = displayName;
		this.firstName = firstName;
		this.lastName = lastName;
		this.mobileNumber = mobileNumber;
		this.gender = gender;
		this.riskRating = riskRating;
		this.bmRating = bmRating;
		this.bmProblemDescription = bmProblemDescription;
		this.bmActionTaken = bmActionTaken;
		this.active = active;
		this.employed = employed;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.pendingUpdate = pendingUpdate;
		this.pendingUpdateNote = pendingUpdateNote;
		this.numFamilyMembers = numFamilyMembers;
		this.numMinDependents = numMinDependents;
		this.numSeniorDependents = numSeniorDependents;
		this.numUnwellMembers = numUnwellMembers;
		this.unwellMemberHealthDescription = unwellMemberHealthDescription;
		this.audits = audits;
		this.riskRatingHistories = riskRatingHistories;
		this.meetings = meetings;
		this.externalLoans = externalLoans;
		this.customerFamilyMembers = customerFamilyMembers;
		this.customers = customers;
		this.occupations = occupations;
		this.assets = assets;
		this.loanAccounts = loanAccounts;
		this.customerFamilyOccupations = customerFamilyOccupations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "customer_id", unique = true, nullable = false)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_type_id", nullable = false)
	public CustomerType getCustomerType() {
		return this.customerType;
	}

	public void setCustomerType(CustomerType customerType) {
		this.customerType = customerType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "office_id", nullable = false)
	public Office getOffice() {
		return this.office;
	}

	public void setOffice(Office office) {
		this.office = office;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_customer_id")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "loan_officer", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@Column(name = "meeting_day", length = 9)
	public String getMeetingDay() {
		return this.meetingDay;
	}

	public void setMeetingDay(String meetingDay) {
		this.meetingDay = meetingDay;
	}

	@Column(name = "external_id", length = 45)
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@Column(name = "display_name", length = 100)
	public String getDisplayName() {
		return this.displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "mobile_number", length = 45)
	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	@Column(name = "gender", length = 6)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "risk_rating", length = 2)
	public String getRiskRating() {
		return this.riskRating;
	}

	public void setRiskRating(String riskRating) {
		this.riskRating = riskRating;
	}

	@Column(name = "bm_rating", length = 2)
	public String getBmRating() {
		return this.bmRating;
	}

	public void setBmRating(String bmRating) {
		this.bmRating = bmRating;
	}
	
	@Column(name = "bm_problem_description", length = 101)
	public String getBmProblemDescription() {
		return bmProblemDescription;
	}
	
	public void setBmProblemDescription(String bmProblemDescription) {
		this.bmProblemDescription = bmProblemDescription;
	}

	@Column(name = "bm_action_taken", length = 101)
	public String getBmActionTaken() {
		return bmActionTaken;
	}

	public void setBmActionTaken(String bmActionTaken) {
		this.bmActionTaken = bmActionTaken;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "employed")
	public Boolean getEmployed() {
		return this.employed;
	}

	public void setEmployed(Boolean employed) {
		this.employed = employed;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "pending_update")
	public Boolean getPendingUpdate() {
		return this.pendingUpdate;
	}

	public void setPendingUpdate(Boolean pendingUpdate) {
		this.pendingUpdate = pendingUpdate;
	}

	@Column(name = "pending_update_note", length = 500)
	public String getPendingUpdateNote() {
		return this.pendingUpdateNote;
	}

	public void setPendingUpdateNote(String pendingUpdateNote) {
		this.pendingUpdateNote = pendingUpdateNote;
	}

	@Column(name = "num_family_members")
	public Integer getNumFamilyMembers() {
		return this.numFamilyMembers;
	}

	public void setNumFamilyMembers(Integer numFamilyMembers) {
		this.numFamilyMembers = numFamilyMembers;
	}

	@Column(name = "num_min_dependents")
	public Integer getNumMinDependents() {
		return this.numMinDependents;
	}

	public void setNumMinDependents(Integer numMinDependents) {
		this.numMinDependents = numMinDependents;
	}

	@Column(name = "num_senior_dependents")
	public Integer getNumSeniorDependents() {
		return this.numSeniorDependents;
	}

	public void setNumSeniorDependents(Integer numSeniorDependents) {
		this.numSeniorDependents = numSeniorDependents;
	}

	@Column(name = "num_unwell_members")
	public Integer getNumUnwellMembers() {
		return this.numUnwellMembers;
	}

	public void setNumUnwellMembers(Integer numUnwellMembers) {
		this.numUnwellMembers = numUnwellMembers;
	}

	@Column(name = "unwell_member_health_description", length = 500)
	public String getUnwellMemberHealthDescription() {
		return this.unwellMemberHealthDescription;
	}

	public void setUnwellMemberHealthDescription(
			String unwellMemberHealthDescription) {
		this.unwellMemberHealthDescription = unwellMemberHealthDescription;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "customer_has_audit", catalog = "risk_module", joinColumns = { @JoinColumn(name = "customer_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "audit_id", nullable = false, updatable = false) })
	public Set<Audit> getAudits() {
		return this.audits;
	}

	public void setAudits(Set<Audit> audits) {
		this.audits = audits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<RiskRatingHistory> getRiskRatingHistories() {
		return this.riskRatingHistories;
	}

	public void setRiskRatingHistories(
			Set<RiskRatingHistory> riskRatingHistories) {
		this.riskRatingHistories = riskRatingHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Meeting> getMeetings() {
		return this.meetings;
	}

	public void setMeetings(Set<Meeting> meetings) {
		this.meetings = meetings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<ExternalLoan> getExternalLoans() {
		return this.externalLoans;
	}

	public void setExternalLoans(Set<ExternalLoan> externalLoans) {
		this.externalLoans = externalLoans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<CustomerFamilyMember> getCustomerFamilyMembers() {
		return this.customerFamilyMembers;
	}

	public void setCustomerFamilyMembers(
			Set<CustomerFamilyMember> customerFamilyMembers) {
		this.customerFamilyMembers = customerFamilyMembers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Occupation> getOccupations() {
		return this.occupations;
	}

	public void setOccupations(Set<Occupation> occupations) {
		this.occupations = occupations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Asset> getAssets() {
		return this.assets;
	}

	public void setAssets(Set<Asset> assets) {
		this.assets = assets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<LoanAccount> getLoanAccounts() {
		return this.loanAccounts;
	}

	public void setLoanAccounts(Set<LoanAccount> loanAccounts) {
		this.loanAccounts = loanAccounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<CustomerFamilyOccupation> getCustomerFamilyOccupations() {
		return this.customerFamilyOccupations;
	}

	public void setCustomerFamilyOccupations(
			Set<CustomerFamilyOccupation> customerFamilyOccupations) {
		this.customerFamilyOccupations = customerFamilyOccupations;
	}

}
