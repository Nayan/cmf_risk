package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Office generated by hbm2java
 */
@Entity
@Table(name = "office", catalog = "risk_module")
public class Office implements java.io.Serializable {

	private Integer officeId;
	private OfficeType officeType;
	private String externalId;
	private String shortName;
	private String name;
	private String zip;
	private String city;
	private String state;
	private Boolean active;
	private String createdBy;
	private String updatedBy;
	private Date updatedDate;
	private Date createdDate;
	private Set<OccupationSubType> occupationSubTypes = new HashSet<OccupationSubType>(
			0);
	private Set<PortalUser> portalUsers = new HashSet<PortalUser>(0);
	private Set<Customer> customers = new HashSet<Customer>(0);
	private Set<Audit> audits = new HashSet<Audit>(0);
	private Set<AssetSubType> assetSubTypes = new HashSet<AssetSubType>(0);
	private Set<Employee> employees = new HashSet<Employee>(0);

	public Office() {
	}

	public Office(OfficeType officeType) {
		this.officeType = officeType;
	}

	public Office(OfficeType officeType, String externalId, String shortName,
			String name, String zip, String city, String state, Boolean active,
			String createdBy, String updatedBy, Date updatedDate,
			Date createdDate, Set<OccupationSubType> occupationSubTypes,
			Set<PortalUser> portalUsers, Set<Customer> customers,
			Set<Audit> audits, Set<AssetSubType> assetSubTypes,
			Set<Employee> employees) {
		this.officeType = officeType;
		this.externalId = externalId;
		this.shortName = shortName;
		this.name = name;
		this.zip = zip;
		this.city = city;
		this.state = state;
		this.active = active;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
		this.createdDate = createdDate;
		this.occupationSubTypes = occupationSubTypes;
		this.portalUsers = portalUsers;
		this.customers = customers;
		this.audits = audits;
		this.assetSubTypes = assetSubTypes;
		this.employees = employees;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "office_id", unique = true, nullable = false)
	public Integer getOfficeId() {
		return this.officeId;
	}

	public void setOfficeId(Integer officeId) {
		this.officeId = officeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "office_type_id", nullable = false)
	public OfficeType getOfficeType() {
		return this.officeType;
	}

	public void setOfficeType(OfficeType officeType) {
		this.officeType = officeType;
	}

	@Column(name = "external_id", length = 45)
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@Column(name = "short_name", length = 45)
	public String getShortName() {
		return this.shortName;
	}

	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "zip", length = 45)
	public String getZip() {
		return this.zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "office")
	public Set<OccupationSubType> getOccupationSubTypes() {
		return this.occupationSubTypes;
	}

	public void setOccupationSubTypes(Set<OccupationSubType> occupationSubTypes) {
		this.occupationSubTypes = occupationSubTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "office")
	public Set<PortalUser> getPortalUsers() {
		return this.portalUsers;
	}

	public void setPortalUsers(Set<PortalUser> portalUsers) {
		this.portalUsers = portalUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "office")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "office")
	public Set<Audit> getAudits() {
		return this.audits;
	}

	public void setAudits(Set<Audit> audits) {
		this.audits = audits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "office")
	public Set<AssetSubType> getAssetSubTypes() {
		return this.assetSubTypes;
	}

	public void setAssetSubTypes(Set<AssetSubType> assetSubTypes) {
		this.assetSubTypes = assetSubTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "office")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

}
