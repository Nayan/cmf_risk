package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Occupation generated by hbm2java
 */
@Entity
@Table(name = "occupation", catalog = "risk_module")
public class Occupation implements java.io.Serializable {

	private Integer occupationId;
	private OccupationSubType occupationSubType;
	private Customer customer;
	private IncomeLumping incomeLumping;
	private Float multiplierValue;
	private String additionalFieldValue;
	private String createdBy;
	private String updatedBy;
	private Date createdDate;
	private Date updatedDate;
	private Float calculatedIncome;
	private Float userDefinedIncome;
	private Boolean multiplierPresent;

	public Occupation() {
	}

	public Occupation(OccupationSubType occupationSubType, Customer customer) {
		this.occupationSubType = occupationSubType;
		this.customer = customer;
	}

	public Occupation(OccupationSubType occupationSubType, Customer customer,
			IncomeLumping incomeLumping, Float multiplierValue,
			String additionalFieldValue, String createdBy, String updatedBy,
			Date createdDate, Date updatedDate, Float calculatedIncome,
			Float userDefinedIncome, Boolean multiplierPresent) {
		this.occupationSubType = occupationSubType;
		this.customer = customer;
		this.incomeLumping = incomeLumping;
		this.multiplierValue = multiplierValue;
		this.additionalFieldValue = additionalFieldValue;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.calculatedIncome = calculatedIncome;
		this.userDefinedIncome = userDefinedIncome;
		this.multiplierPresent = multiplierPresent;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "occupation_id", unique = true, nullable = false)
	public Integer getOccupationId() {
		return this.occupationId;
	}

	public void setOccupationId(Integer occupationId) {
		this.occupationId = occupationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "occupation_sub_type_id", nullable = false)
	public OccupationSubType getOccupationSubType() {
		return this.occupationSubType;
	}

	public void setOccupationSubType(OccupationSubType occupationSubType) {
		this.occupationSubType = occupationSubType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "income_lumping_id")
	public IncomeLumping getIncomeLumping() {
		return this.incomeLumping;
	}

	public void setIncomeLumping(IncomeLumping incomeLumping) {
		this.incomeLumping = incomeLumping;
	}

	@Column(name = "multiplier_value", precision = 12, scale = 0)
	public Float getMultiplierValue() {
		return this.multiplierValue;
	}

	public void setMultiplierValue(Float multiplierValue) {
		this.multiplierValue = multiplierValue;
	}

	@Column(name = "additional_field_value", length = 45)
	public String getAdditionalFieldValue() {
		return this.additionalFieldValue;
	}

	public void setAdditionalFieldValue(String additionalFieldValue) {
		this.additionalFieldValue = additionalFieldValue;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "calculated_income", precision = 12, scale = 0)
	public Float getCalculatedIncome() {
		return this.calculatedIncome;
	}

	public void setCalculatedIncome(Float calculatedIncome) {
		this.calculatedIncome = calculatedIncome;
	}

	@Column(name = "user_defined_income", precision = 12, scale = 0)
	public Float getUserDefinedIncome() {
		return this.userDefinedIncome;
	}

	public void setUserDefinedIncome(Float userDefinedIncome) {
		this.userDefinedIncome = userDefinedIncome;
	}

	@Column(name = "multiplier_present")
	public Boolean getMultiplierPresent() {
		return this.multiplierPresent;
	}

	public void setMultiplierPresent(Boolean multiplierPresent) {
		this.multiplierPresent = multiplierPresent;
	}

}
