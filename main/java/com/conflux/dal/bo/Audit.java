package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Audit generated by hbm2java
 */
@Entity
@Table(name = "audit", catalog = "risk_module")
public class Audit implements java.io.Serializable {

	private Integer auditId;
	private RatingBucket ratingBucket;
	private Office office;
	private Employee employee;
	private AuditType auditType;
	private String name;
	private String description;
	private Integer auditTotalScore;
	private Boolean active;
	private String auditorComments;
	private String actionPlan;
	private String actionTaken;
	private Date followUpDate;
	private Date endDate;
	private String createdBy;
	private Date startDate;
	private Date updatedDate;
	private String updatedBy;
	private Set<Customer> customers = new HashSet<Customer>(0);
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<AuditQuestion> auditQuestions = new HashSet<AuditQuestion>(0);

	public Audit() {
	}

	public Audit(AuditType auditType) {
		this.auditType = auditType;
	}

	public Audit(RatingBucket ratingBucket, Office office, Employee employee,
			AuditType auditType, String name, String description,
			Integer auditTotalScore, Boolean active, String auditorComments,
			String actionPlan, String actionTaken, Date followUpDate,
			Date endDate, String createdBy, Date startDate, Date updatedDate,
			String updatedBy, Set<Customer> customers, Set<Employee> employees,
			Set<AuditQuestion> auditQuestions) {
		this.ratingBucket = ratingBucket;
		this.office = office;
		this.employee = employee;
		this.auditType = auditType;
		this.name = name;
		this.description = description;
		this.auditTotalScore = auditTotalScore;
		this.active = active;
		this.auditorComments = auditorComments;
		this.actionPlan = actionPlan;
		this.actionTaken = actionTaken;
		this.followUpDate = followUpDate;
		this.endDate = endDate;
		this.createdBy = createdBy;
		this.startDate = startDate;
		this.updatedDate = updatedDate;
		this.updatedBy = updatedBy;
		this.customers = customers;
		this.employees = employees;
		this.auditQuestions = auditQuestions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "audit_id", unique = true, nullable = false)
	public Integer getAuditId() {
		return this.auditId;
	}

	public void setAuditId(Integer auditId) {
		this.auditId = auditId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rating_bucket_id")
	public RatingBucket getRatingBucket() {
		return this.ratingBucket;
	}

	public void setRatingBucket(RatingBucket ratingBucket) {
		this.ratingBucket = ratingBucket;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "office_id")
	public Office getOffice() {
		return this.office;
	}

	public void setOffice(Office office) {
		this.office = office;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "action_plan_owner_id")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "audit_type_id", nullable = false)
	public AuditType getAuditType() {
		return this.auditType;
	}

	public void setAuditType(AuditType auditType) {
		this.auditType = auditType;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "audit_total_score")
	public Integer getAuditTotalScore() {
		return this.auditTotalScore;
	}

	public void setAuditTotalScore(Integer auditTotalScore) {
		this.auditTotalScore = auditTotalScore;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "auditor_comments", length = 1000)
	public String getAuditorComments() {
		return this.auditorComments;
	}

	public void setAuditorComments(String auditorComments) {
		this.auditorComments = auditorComments;
	}

	@Column(name = "action_plan", length = 1000)
	public String getActionPlan() {
		return this.actionPlan;
	}

	public void setActionPlan(String actionPlan) {
		this.actionPlan = actionPlan;
	}

	@Column(name = "action_taken", length = 1000)
	public String getActionTaken() {
		return this.actionTaken;
	}

	public void setActionTaken(String actionTaken) {
		this.actionTaken = actionTaken;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "follow_up_date", length = 10)
	public Date getFollowUpDate() {
		return this.followUpDate;
	}

	public void setFollowUpDate(Date followUpDate) {
		this.followUpDate = followUpDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "end_date", length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_date", length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "audits")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "audits")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "audit")
	public Set<AuditQuestion> getAuditQuestions() {
		return this.auditQuestions;
	}

	public void setAuditQuestions(Set<AuditQuestion> auditQuestions) {
		this.auditQuestions = auditQuestions;
	}

}
