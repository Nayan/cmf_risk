package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "question", catalog = "risk_module")
public class Question implements java.io.Serializable {

	private Integer questionId;
	private AuditType auditType;
	private String questionString;
	private Integer position;
	private Boolean negativeScore;
	private Integer minScore;
	private Integer maxScore;
	private Integer defaultScore;
	private Boolean active;
	private String createdBy;
	private String updatedBy;
	private Date createdDate;
	private Date updatedDate;

	public Question() {
	}

	public Question(AuditType auditType) {
		this.auditType = auditType;
	}

	public Question(AuditType auditType, String questionString,
			Integer position, Boolean negativeScore, Integer minScore,
			Integer maxScore, Integer defaultScore, Boolean active,
			String createdBy, String updatedBy, Date createdDate,
			Date updatedDate) {
		this.auditType = auditType;
		this.questionString = questionString;
		this.position = position;
		this.negativeScore = negativeScore;
		this.minScore = minScore;
		this.maxScore = maxScore;
		this.defaultScore = defaultScore;
		this.active = active;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "question_id", unique = true, nullable = false)
	public Integer getQuestionId() {
		return this.questionId;
	}

	public void setQuestionId(Integer questionId) {
		this.questionId = questionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "audit_type_id", nullable = false)
	public AuditType getAuditType() {
		return this.auditType;
	}

	public void setAuditType(AuditType auditType) {
		this.auditType = auditType;
	}

	@Column(name = "question_string", length = 500)
	public String getQuestionString() {
		return this.questionString;
	}

	public void setQuestionString(String questionString) {
		this.questionString = questionString;
	}

	@Column(name = "position")
	public Integer getPosition() {
		return this.position;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	@Column(name = "negative_score")
	public Boolean getNegativeScore() {
		return this.negativeScore;
	}

	public void setNegativeScore(Boolean negativeScore) {
		this.negativeScore = negativeScore;
	}

	@Column(name = "min_score")
	public Integer getMinScore() {
		return this.minScore;
	}

	public void setMinScore(Integer minScore) {
		this.minScore = minScore;
	}

	@Column(name = "max_score")
	public Integer getMaxScore() {
		return this.maxScore;
	}

	public void setMaxScore(Integer maxScore) {
		this.maxScore = maxScore;
	}

	@Column(name = "default_score")
	public Integer getDefaultScore() {
		return this.defaultScore;
	}

	public void setDefaultScore(Integer defaultScore) {
		this.defaultScore = defaultScore;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "created_by", length = 45)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
