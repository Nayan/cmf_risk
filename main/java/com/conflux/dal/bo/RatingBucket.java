package com.conflux.dal.bo;

// Generated 17 Jan, 2013 8:44:06 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * RatingBucket generated by hbm2java
 */
@Entity
@Table(name = "rating_bucket", catalog = "risk_module")
public class RatingBucket implements java.io.Serializable {

	private Integer ratingBucketId;
	private String name;
	private String displayValue;
	private Set<AuditTypeScoring> auditTypeScorings = new HashSet<AuditTypeScoring>(
			0);
	private Set<Audit> audits = new HashSet<Audit>(0);

	public RatingBucket() {
	}

	public RatingBucket(String name, String displayValue,
			Set<AuditTypeScoring> auditTypeScorings, Set<Audit> audits) {
		this.name = name;
		this.displayValue = displayValue;
		this.auditTypeScorings = auditTypeScorings;
		this.audits = audits;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "rating_bucket_id", unique = true, nullable = false)
	public Integer getRatingBucketId() {
		return this.ratingBucketId;
	}

	public void setRatingBucketId(Integer ratingBucketId) {
		this.ratingBucketId = ratingBucketId;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "display_value", length = 45)
	public String getDisplayValue() {
		return this.displayValue;
	}

	public void setDisplayValue(String displayValue) {
		this.displayValue = displayValue;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ratingBucket")
	public Set<AuditTypeScoring> getAuditTypeScorings() {
		return this.auditTypeScorings;
	}

	public void setAuditTypeScorings(Set<AuditTypeScoring> auditTypeScorings) {
		this.auditTypeScorings = auditTypeScorings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ratingBucket")
	public Set<Audit> getAudits() {
		return this.audits;
	}

	public void setAudits(Set<Audit> audits) {
		this.audits = audits;
	}

}
